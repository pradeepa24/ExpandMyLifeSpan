{"version":3,"sources":["images/home-icon.jpg","images/meal-plan-image.jpg","images/workout-plan-image.jpg","images/health-check-image.jpg","images/loading-icon.gif","logo.svg","components/login-component/login.js","components/sign-up-component/sign-up.js","components/home-component/home.js","components/meal-plan-component/meal-plan.js","components/workout-plan-component/workout-plan.js","components/health-check-component/health-check.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","updateCredential","e","cred","props","loggerInfo","target","name","value","setLogin","submitLogin","preventDefault","authenticateUser","setTimeout","authenticatedFlag","history","push","className","type","this","userName","onChange","password","onClick","to","Component","SignUp","updateLogger","createdCredential","create","createAccount","Home","src","mealBackground","alt","workoutBackground","healthCheckBackground","MealPlan","updateSearch","setSearch","search","callMeals","displayMeals","console","log","mealPlan","meals","map","meal","ind","image","key","title","toUpperCase","readyInMinutes","servings","homeIcon","searchText","WorkoutPlan","displayWorkoutVideoList","workoutVideos","video","handleVideoSelect","snippet","thumbnails","medium","url","description","displayVideo","selectedWorkoutVideo","videoSrc","id","videoId","allowFullScreen","loadingIcon","HealthCheck","KEY","App","handleSubmit","Axios","get","params","part","maxResults","q","then","res","setState","data","items","catch","err","login","logger","state","loginCredentials","filter","user","str","replace","loggersTemp","credential","loggers","put","ready","credentials","_id","headers","exact","path","render","component","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d5aff2a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-icon.dac126b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meal-plan-image.ebcccb59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/workout-plan-image.857a392a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/health-check-image.9c2c9811.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-icon.a44d5fc1.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\nimport './login.css';\nimport {Link} from 'react-router-dom';\n\nexport default class Login extends Component {\n    updateCredential = (e) => {\n       let cred = {...this.props.loggerInfo} \n       cred[e.target.name] = e.target.value;\n      this.props.setLogin(cred);\n    }\n    submitLogin = (e) => {\n        e.preventDefault();\n        this.props.authenticateUser();\n        setTimeout(() => {\n            if(this.props.authenticatedFlag) {\n                this.props.history.push(\"/home\");\n              }\n        }, 250)\n    }\n \n    render() {\n        return (\n            <div className=\"login\">\n              <div className=\"login-content\">\n               <form>\n                   <div className=\"field-groups\">\n                       <div className=\"fields\">\n                         <label>Username</label>\n                         <input type=\"text\"\n                                name=\"userName\"\n                                value={this.props.loggerInfo.userName}\n                                onChange={this.updateCredential}\n                          />\n                       </div>\n                       <div className=\"fields\">\n                          <label>Password</label>\n                          <input type=\"password\"\n                                 name=\"password\"\n                                 value={this.props.loggerInfo.password}\n                                 onChange={this.updateCredential}\n                           />      \n                       </div>\n                       <div className=\"submit\">\n                           <input type=\"submit\"\n                                  value=\"Submit\"\n                                  name=\"submit\"\n                                  onClick={this.submitLogin}\n                            />\n                       </div>\n                   </div>\n               </form>\n               <div className=\"sign-up-content\">\n                   <p>Not registered yet?</p>\n                   <Link to=\"/sign-up\">Sign Up</Link>\n               </div>\n            </div>\n         </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './sign-up.css';\nimport { create } from 'domain';\n\nexport default class SignUp extends Component {\n    updateLogger = (e) => {\n        let createdCredential = {...this.props.loggerInfo}\n        createdCredential[e.target.name] = e.target.value;\n        this.props.setLogin(createdCredential);\n    }\n   create = (e) => {\n      e.preventDefault();\n      this.props.createAccount();\n   }\n    render() {\n        return (\n            <div className=\"login\">\n             <div className=\"login-content\">\n             <form>\n                 <div className=\"field-groups\">\n                     <div className=\"fields\">\n                       <label>Username</label>\n                       <input type=\"text\"\n                              name=\"userName\"\n                              value={this.props.loggerInfo.userName}\n                              onChange={this.updateLogger}\n                        />\n                     </div>\n                     <div className=\"fields\">\n                        <label>Password</label>\n                        <input type=\"password\"\n                               name=\"password\"\n                               value={this.props.loggerInfo.password}\n                               onChange={this.updateLogger}\n                         />      \n                     </div>\n                     <div className=\"submit\">\n                         <input type=\"submit\"\n                                value=\"Create\"\n                                name=\"submit\"\n                                onClick={this.create}\n                          />\n                     </div>\n                 </div>\n             </form>\n          </div>\n            </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './home.css';\nimport {Link } from 'react-router-dom';\nimport mealBackground from '../../images/meal-plan-image.jpg';\nimport workoutBackground from '../../images/workout-plan-image.jpg';\nimport healthCheckBackground from '../../images/health-check-image.jpg';\n\nexport default class Home extends Component {\n    render() {\n       \n        return (\n            <div className=\"home-content\">\n                <Link to=\"/meal-plan\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>MEAL PLAN</h4>\n                       <p></p>\n                   </div>\n                   <img src={mealBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n                <Link to=\"/workout-plan\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>WORKOUT PLAN</h4>\n                       <p></p>\n                   </div>\n                   <img src={workoutBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n                <Link to=\"/health-check\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>HEALTH CHECK</h4>\n                       <p></p>\n                   </div>\n                   <img src={healthCheckBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n                {/* <div>\n                \n                <form>\n                   <div className=\"field-groups\">\n                       <div className=\"fields\">\n                         <label>Height(cm)</label>\n                         <input type=\"number\"\n                                name=\"height\"\n                                value=\"\"\n                                onChange=\"\"\n                          />\n                       </div>\n                       <div className=\"fields\">\n                          <label>Weight(kg)</label>\n                          <input type=\"number\"\n                                 name=\"weight\"\n                                 value=\"\"\n                                 onChange=\"\"\n                           />      \n                       </div>\n                       <div className=\"submit\">\n                           <input type=\"submit\"\n                                  value=\"Submit\"\n                                  name=\"submit\"\n                                  onClick=\"\"\n                            />\n                       </div>\n                   </div>\n               </form>\n               \n                </div> */}\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './meal-plan.css';\nimport {Link} from 'react-router-dom';\nimport homeIcon from '../../images/home-icon.jpg';\n\nexport default class MealPlan extends Component {\n    updateSearch = (e) => {\n       this.props.setSearch(e.target.value);\n    }\n    search = (e) => {\n        e.preventDefault();\n       this.props.callMeals();\n    }\n    displayMeals = () => {\n       setTimeout(() => {\n           console.log(this.props.mealPlan.meals)\n        },750) \n        if(this.props.mealPlan.meals){\n            return this.props.mealPlan.meals.map((meal,ind) => {\n                console.log(meal.image)\n                return (\n                <div className=\"meal-content\" key={ind}>\n                    <img src={`https://spoonacular.com/recipeImages/${meal.image}`} alt={meal.title}/>\n                    <div className=\"meal-description\">\n                       <h5>{meal.title.toUpperCase()}</h5>\n                       <p>Preparation Time: {meal.readyInMinutes}</p>\n                       <p>Servings: {meal.servings}</p>\n                    </div>\n                </div>\n                )\n            })\n        }\n       \n           \n    }\n    render() {\n        console.log(this.props.mealPlan);\n        return (\n            <div className=\"meal-plan-content\">\n              <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link>\n              <div className=\"search-meal-content\">\n                <input type=\"text\"\n                       name=\"searchText\"\n                       value={this.props.searchText}\n                       onChange={this.updateSearch}\n                    />\n                  <button onClick={this.search}>Search</button>\n              </div>\n              <div className=\"meals\">\n                <div className=\"meals-heading\">\n                   <h3>MEAL PLAN FOR THE DAY</h3>\n                </div>\n                {this.displayMeals()}\n              </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './workout-plan.css';\nimport loadingIcon from '../../images/loading-icon.gif';\nimport homeIcon from '../../images/home-icon.jpg';\nimport {Link } from 'react-router-dom';\n\nexport default class WorkoutPlan extends Component {\n    displayWorkoutVideoList = () => {\n        return this.props.workoutVideos.map((video,ind) => {\n            return (\n                <div key ={ind} onClick={ () => this.props.handleVideoSelect(video)} className=\"workout-video\">\n                   <img src={video.snippet.thumbnails.medium.url} alt={video.snippet.description}/>\n                   <div className='workout-video-description'>\n                      <div className='header '>{video.snippet.title}</div>\n                   </div>\n                </div>\n            )\n        })\n    }\n    displayVideo = () => {\n        if(this.props.selectedWorkoutVideo) {\n            let videoSrc = `https://www.youtube.com/embed/${this.props.selectedWorkoutVideo.id.videoId}`;\n            return (\n                <div className=\"working-video\">\n                   <div className=\"video-play\">\n                    <iframe src={videoSrc} allowFullScreen title='Video player'/>\n                   </div>\n                   <br />\n                   <div className=\"video-desc\">\n                    <h4 className=\"video-title\">{this.props.selectedWorkoutVideo.snippet.title}</h4>\n                    <p>{this.props.selectedWorkoutVideo.snippet.description}</p>\n                   </div>\n               </div>\n            )\n        } else {\n            return (\n                <span>Loading<img className=\"loading\" src={loadingIcon} alt=\"loadingIcon\"/></span>\n            )\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"workout-plan-content\">\n              <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link>\n              <div className=\"workout-plan\">\n                    <h3>WORKOUT FOR THE DAY</h3>\n                    <div className=\"workout-video-content\">\n                        <div className=\"workout-video-disp\">\n                            {this.displayVideo()}\n                        </div>\n                        <div className=\"workout-video-section\">\n                            {this.displayWorkoutVideoList()}\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './health-check.css';\nimport {Link} from 'react-router-dom';\nimport homeIcon from '../../images/home-icon.jpg';\n\nexport default class HealthCheck extends Component {\n    render() {\n        return (\n            <div>\n               <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link> \n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Switch,Route} from 'react-router-dom';\nimport Login from './components/login-component/login';\nimport SignUp from './components/sign-up-component/sign-up';\nimport Home from './components/home-component/home';\nimport MealPlan from './components/meal-plan-component/meal-plan';\nimport WorkoutPlan from './components/workout-plan-component/workout-plan';\nimport HealthCheck from './components/health-check-component/health-check';\nimport Axios from 'axios';\nconst KEY = 'AIzaSyAEjrWBTS0fzNvmx9JTdBBNYEVs460G0SU';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready:false,\n      credential:{},\n      loginCredentials:[],\n      loggerInfo:{\n        userName:\"\",\n        password:\"\"\n    },\n    mealPlan:{},\n    searchText:\"\",\n    authenticatedFlag: false,\n    workoutVideos: [],\n    selectedWorkoutVideo: null\n    }\n  }\n  componentDidMount(){\n    Axios.get(\"https://ironrest.herokuapp.com/pradeepa\")\n         .then((data) => {\n           console.log(data);\n           let credentials = data.data.filter(cred => cred._id === '5dd440ae7b55290017a2b1bc');\n           this.setState({\n               ready:true,\n               credential: data.data,\n               loginCredentials: credentials[0].loggers \n           })\n         })\n         .catch((err)=>{\n           console.log(err);\n         })\n    Axios.get(\"https://webknox-recipes.p.rapidapi.com/recipes/mealplans/generate?targetCalories=2000&timeFrame=day\",{headers:{\n          \"x-rapidapi-host\": \"webknox-recipes.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"4f90ef96b0msh246f6e054afbdd1p14c2ffjsn4e4ab27d80f1\"}\n        })\n             .then((meals)=>{\n               console.log(meals.data);\n               this.setState({\n                    mealPlan:meals.data,\n                    ready:true\n               })\n             })\n             .catch((err)=>{\n               console.log(err);\n             })\n    this.handleSubmit();\n    // Axios.put(\"https://ironrest.herokuapp.com/pradeepa/5dd43ede7b55290017a2b1a8\",{scores:['asdfsdf']})\n    // .then(res=>console.log(res))\n    // .catch(err=>console.log(err))\n    \n  }\n  handleSubmit = () => {\n    Axios.get('https://www.googleapis.com/youtube/v3/search',{params: {\n      part: \"snippet\",\n      maxResults: 3,\n      key: KEY,\n      q:\"workout\"\n  }\n  })\n       .then((res)=>{\n          console.log(res);\n          this.setState({\n        workoutVideos: res.data.items\n           })\n       })\n       .catch((err) => {\n         console.log(err);\n       })\n    \n}\nhandleVideoSelect = (video) => {\n  this.setState({selectedWorkoutVideo: video})\n}\n\n  setLogin = (login) => {\n    this.setState({\n      loggerInfo: login\n    })\n  }\n  authenticateUser = () => {\n    let logger = this.state.loginCredentials.filter(user => user.userName === this.state.loggerInfo.userName);\n    if(this.state.loggerInfo.password === logger[0].password) {\n       this.setState({\n         authenticatedFlag:true\n       })\n    }\n  }\n  setSearch = (str) => {\n    this.setState({\n      searchText:str\n    })\n  }\n  callMeals = ()=> {\n    let str = this.state.searchText;\n    let replacedStr = str.replace(/ /gi,'%20');\n   \n  }\n  createAccount = () => {\n    let loggersTemp = {...this.state.credential}\n    \n    loggersTemp[4].loggers.push(this.state.loggerInfo);\n    console.log(loggersTemp);\n    Axios.put(\"https://ironrest.herokuapp.com/pradeepa/5dd440ae7b55290017a2b1bc\",{data:loggersTemp})\n         .then((res) => {\n           console.log(res)\n         })\n         .catch((err)=>{\n           console.log(err);\n         })\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <header>\n          <h1>AAROKYA</h1>\n        </header>\n        <div className=\"main-content\">\n          <Switch>\n            <Route exact path=\"/\" render = { (props) => <Login {...props} loggerInfo = {this.state.loggerInfo}\n                                                                          setLogin = {this.setLogin}\n                                                                          authenticateUser = {this.authenticateUser}\n                                                                          authenticatedFlag = {this.state.authenticatedFlag}\n            /> } />\n            <Route exact path=\"/sign-up\" render = { (props) => <SignUp {...props} loggerInfo = {this.state.loggerInfo}\n                                                                                  setLogin = {this.setLogin}\n                                                                                  createAccount = {this.createAccount}\n                                                                                  authenticateUser = {this.authenticateUser}\n                                                                                  authenticatedFlag = {this.state.authenticatedFlag}\n            /> } />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/meal-plan\" render = { (props) => <MealPlan {...props} searchText = {this.state.searchText}\n                                                                                      setSearch = {this.setSearch}\n                                                                                      callMeals = {this.callMeals}\n                                                                                      mealPlan = {this.state.mealPlan}\n                                                                                      ready = {this.state.ready}\n            /> } />\n            <Route exact path=\"/workout-plan\" render = { (props) => <WorkoutPlan {...props} workoutVideos = {this.state.workoutVideos}\n                                                                                            selectedWorkoutVideo = {this.state.selectedWorkoutVideo}\n                                                                                            handleVideoSelect = {this.handleVideoSelect}\n            /> } />\n            <Route exact path=\"/health-check\" component={HealthCheck} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n       <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}