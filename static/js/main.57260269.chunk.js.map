{"version":3,"sources":["images/home-icon.jpg","images/loading-icon.gif","images/meal-plan-image.jpg","images/workout-plan-image.jpg","images/health-check-image.jpg","images/account-icon-check.png","images/leaf-icon.png","logo.svg","components/login-component/login.js","components/sign-up-component/sign-up.js","components/home-component/home.js","components/meal-plan-component/meal-plan.js","components/workout-plan-component/workout-plan.js","components/health-check-component/health-check.js","components/recipe-details-component/recipe-details.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","updateCredential","e","cred","props","loggerInfo","target","name","value","setLogin","submitLogin","preventDefault","authenticateUser","setTimeout","authenticatedFlag","history","push","className","type","placeholder","this","userName","onChange","password","onClick","to","Component","SignUp","updateLogger","createdCredential","create","createAccount","console","log","Home","displayDropdown","styleSettings","display","setStyleSettings","logOut","logOutSession","src","accountIcon","alt","style","class","href","mealBackground","workoutBackground","healthCheckBackground","MealPlan","updateSearch","setSearch","search","callMeals","displayMeals","mealPlan","meals","map","meal","ind","image","id","key","title","toUpperCase","readyInMinutes","servings","homeIcon","searchText","WorkoutPlan","displayWorkoutVideoList","workoutVideos","video","handleVideoSelect","snippet","thumbnails","medium","url","description","displayVideo","selectedWorkoutVideo","videoSrc","videoId","allowFullScreen","loadingIcon","HealthCheck","updateBmiObj","obj","bmiObj","setBmiObject","submitBmi","getBmi","displayBmiResult","bmiResult","bmi","status","risk","prime","whr","whtr","ideal_weight","bmiLoaderFlag","height","weight","age","waist","hip","RecipeDetails","displayDescription","recipeDescription","instructions","getDescription","match","params","KEY","rapidKey","App","Axios","get","headers","then","res","setState","data","catch","err","getMeals","ready","post","state","styleObj","handleSubmit","part","maxResults","q","items","login","logger","loginCredentials","filter","user","date","Date","toDateString","workoutPlan","index","futureLoggersMeal","forEach","put","loggers","str","replace","futureLoggers","credentials","_id","leafIcon","exact","path","render","React","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.57260269.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-icon.dac126b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading-icon.a44d5fc1.gif\";","module.exports = __webpack_public_path__ + \"static/media/meal-plan-image.ebcccb59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/workout-plan-image.857a392a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/health-check-image.9c2c9811.jpg\";","module.exports = __webpack_public_path__ + \"static/media/account-icon-check.ef20e411.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf-icon.6ce2e8a9.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, { Component } from 'react';\nimport './login.css';\nimport {Link} from 'react-router-dom';\n\nexport default class Login extends Component {\n    updateCredential = (e) => {\n       let cred = {...this.props.loggerInfo} \n       cred[e.target.name] = e.target.value;\n      this.props.setLogin(cred);\n    }\n    submitLogin = (e) => {\n        e.preventDefault();\n        this.props.authenticateUser();\n        setTimeout(() => {\n            if(this.props.authenticatedFlag) {\n                this.props.history.push(\"/home\");\n              }\n        }, 500)\n    }\n \n    render() {\n        return (\n            <div className=\"login\">\n              <div className=\"login-content\">\n               <form>\n                   <div className=\"field-groups\">\n                       <div className=\"fields\">\n                         <label>Username</label>\n                         <input type=\"text\"\n                                placeholder=\"User name\"\n                                name=\"userName\"\n                                value={this.props.loggerInfo.userName}\n                                onChange={this.updateCredential}\n                          />\n                       </div>\n                       <div className=\"fields\">\n                          <label>Password</label>\n                          <input type=\"password\"\n                                 placeholder=\"Password\"\n                                 name=\"password\"\n                                 value={this.props.loggerInfo.password}\n                                 onChange={this.updateCredential}\n                           />      \n                       </div>\n                       <div className=\"submit\">\n                           <input type=\"submit\"\n                                  value=\"Submit\"\n                                  name=\"submit\"\n                                  onClick={this.submitLogin}\n                            />\n                       </div>\n                   </div>\n               </form>\n               <div className=\"sign-up-content\">\n                   <p>Not registered yet?</p>\n                   <Link to=\"/sign-up\">Sign Up</Link>\n               </div>\n            </div>\n         </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './sign-up.css';\nimport { create } from 'domain';\n\nexport default class SignUp extends Component {\n    updateLogger = (e) => {\n        let createdCredential = {...this.props.loggerInfo}\n        createdCredential[e.target.name] = e.target.value;\n        this.props.setLogin(createdCredential);\n    }\n   create = (e) => {\n      e.preventDefault();\n      this.props.createAccount();\n      setTimeout(() => {\n          console.log(this.props.authenticatedFlag);\n        if(this.props.authenticatedFlag) {\n            this.props.history.push(\"/home\");\n          }\n    }, 250)\n   }\n    render() {\n        return (\n            <div className=\"login\">\n             <div className=\"login-content\">\n             <form>\n                 <div className=\"field-groups\">\n                     <div className=\"fields\">\n                       <label>Username</label>\n                       <input type=\"text\"\n                              name=\"userName\"\n                              value={this.props.loggerInfo.userName}\n                              onChange={this.updateLogger}\n                        />\n                     </div>\n                     <div className=\"fields\">\n                        <label>Password</label>\n                        <input type=\"password\"\n                               name=\"password\"\n                               value={this.props.loggerInfo.password}\n                               onChange={this.updateLogger}\n                         />      \n                     </div>\n                     <div className=\"submit\">\n                         <input type=\"submit\"\n                                value=\"Create\"\n                                name=\"submit\"\n                                onClick={this.create}\n                          />\n                     </div>\n                 </div>\n             </form>\n          </div>\n            </div>\n            \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './home.css';\nimport {Link } from 'react-router-dom';\nimport mealBackground from '../../images/meal-plan-image.jpg';\nimport workoutBackground from '../../images/workout-plan-image.jpg';\nimport healthCheckBackground from '../../images/health-check-image.jpg';\nimport accountIcon from '../../images/account-icon-check.png';\n\nexport default class Home extends Component {\n    displayDropdown = () => {\n        let styleSettings;\n        if(this.props.styleSettings.display === 'none') {\n            styleSettings = {display:'flex'};\n        } else {\n            styleSettings = {display:'none'};\n        }\n       this.props.setStyleSettings(styleSettings);\n    }\n    logOut = () =>{\n        this.props.logOutSession();\n        setTimeout(()=>{\n           if(!this.props.authenticatedFlag) {\n               this.displayDropdown();\n            this.props.history.push(\"/\");\n           }\n        },250)\n    }\n    render() {\n       \n        return (\n            <div className=\"home-content\">\n             <button className=\"account-icon\"><img  src={accountIcon} alt=\"homeIcon\" onClick={this.displayDropdown}/></button>\n             <div style={this.props.styleSettings} class=\"dropdown-content\">\n                  <a href=\"#\">Link 1</a>\n                  <a href=\"#\">Link 2</a>\n                  <button onClick={this.logOut}>Log out</button>\n                </div>\n                <Link to=\"/meal-plan\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>Meal Plan</h4>\n                       <p></p>\n                   </div>\n                   <img src={mealBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n                <Link to=\"/workout-plan\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>Workout Plan</h4>\n                       <p></p>\n                   </div>\n                   <img src={workoutBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n                <Link to=\"/health-check\">\n                  <div className=\"meal-nav\">\n                   <div className=\"meal-nav-description\">\n                      <h4>Health Check</h4>\n                       <p></p>\n                   </div>\n                   <img src={healthCheckBackground} alt=\"meals\" />\n                  </div>\n                </Link>\n            </div>\n\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './meal-plan.css';\nimport {Link} from 'react-router-dom';\nimport homeIcon from '../../images/home-icon.jpg';\n\nexport default class MealPlan extends Component {\n    updateSearch = (e) => {\n       this.props.setSearch(e.target.value);\n    }\n    search = (e) => {\n        e.preventDefault();\n       this.props.callMeals();\n    }\n    displayMeals = () => {\n       setTimeout(() => {\n           console.log(this.props.mealPlan.meals)\n        },750) \n        if(this.props.mealPlan.meals){\n            return this.props.mealPlan.meals.map((meal,ind) => {\n                console.log(meal.image)\n                return (\n                <Link to={`/meal-plan/${meal.id}`} key={ind} ><div className=\"meal-content\" >\n                    <img src={`https://spoonacular.com/recipeImages/${meal.image}`} alt={meal.title}/>\n                    <div className=\"meal-description\">\n                       <h5>{meal.title.toUpperCase()}</h5>\n                       <p>Preparation Time: {meal.readyInMinutes}</p>\n                       <p>Servings: {meal.servings}</p>\n                    </div>\n                </div></Link>\n                )\n            })\n        }\n       \n           \n    }\n    render() {\n        console.log(this.props.mealPlan);\n        return (\n            <div className=\"meal-plan-content\">\n              <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link>\n              <div className=\"search-meal-content\">\n                <input type=\"text\"\n                       name=\"searchText\"\n                       value={this.props.searchText}\n                       onChange={this.updateSearch}\n                    />\n                  <button onClick={this.search}>Search</button>\n              </div>\n              <div className=\"meals\">\n                <div className=\"meals-heading\">\n                   <h3>Meal Plan for the day</h3>\n                </div>\n                {this.displayMeals()}\n              </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './workout-plan.css';\nimport loadingIcon from '../../images/loading-icon.gif';\nimport homeIcon from '../../images/home-icon.jpg';\nimport {Link } from 'react-router-dom';\n\nexport default class WorkoutPlan extends Component {\n    displayWorkoutVideoList = () => {\n        return this.props.workoutVideos.map((video,ind) => {\n            return (\n                <div key ={ind} onClick={ () => this.props.handleVideoSelect(video)} className=\"workout-video\">\n                   <img src={video.snippet.thumbnails.medium.url} alt={video.snippet.description}/>\n                   <div className='workout-video-description'>\n                      <div className='header-video'>{video.snippet.title}</div>\n                   </div>\n                </div>\n            )\n        })\n    }\n    displayVideo = () => {\n        if(this.props.selectedWorkoutVideo) {\n            let videoSrc = `https://www.youtube.com/embed/${this.props.selectedWorkoutVideo.id.videoId}`;\n            return (\n                <div className=\"working-video\">\n                   <div className=\"video-play\">\n                    <iframe src={videoSrc} allowFullScreen title='Video player'/>\n                   </div>\n                   {/* <br /> */}\n                   <div className=\"video-desc\">\n                    <h4 className=\"video-title\">{this.props.selectedWorkoutVideo.snippet.title}</h4>\n                    <p>{this.props.selectedWorkoutVideo.snippet.description}</p>\n                   </div>\n               </div>\n            )\n        } else {\n            return (\n                <span className=\"loading-content\">Loading<img className=\"loading\" src={loadingIcon} alt=\"loadingIcon\"/></span>\n            )\n        }\n        \n    }\n    render() {\n        return (\n            <div className=\"workout-plan-content\">\n              <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link>\n              <div className=\"workout-plan\">\n                    <h3>Workout for the day</h3>\n                    <div className=\"workout-video-content\">\n                        <div className=\"workout-video-disp\">\n                            {this.displayVideo()}\n                        </div>\n                        <div className=\"workout-video-section\">\n                            {this.displayWorkoutVideoList()}\n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './health-check.css';\nimport {Link} from 'react-router-dom';\nimport homeIcon from '../../images/home-icon.jpg';\nimport loadingIcon from '../../images/loading-icon.gif';\n\nexport default class HealthCheck extends Component {\n    updateBmiObj = (e) => {\n        let obj = {...this.props.bmiObj}\n        if(typeof obj[e.target.name] === 'object') {\n            obj[e.target.name].value = e.target.value;\n        } else{\n            obj[e.target.name] = e.target.value;\n        }\n        \n        this.props.setBmiObject(obj)\n    }\n    submitBmi = (e) => {\n        e.preventDefault();\n        this.props.getBmi();\n    }\n    displayBmiResult = () => {\n        console.log('entering')\n        console.log(this.props.bmiResult.bmi)\n        if(this.props.bmiResult.bmi){\n            console.log('entered if');\n            console.log(this.props.bmiResult.bmi)\n            return (\n                <div className=\"bmi-result-section\">\n                        <h3>BMI Result</h3>\n                    <div className=\"bmi-result-parts\">\n                        <div className=\"bmi-result-part1\">\n                           <h4>BMI</h4>\n                           <label>Value</label>\n                           <p>{this.props.bmiResult.bmi.value}</p>\n                           <label>Status</label>\n                           <p>{this.props.bmiResult.bmi.status}</p>\n                           <label>Risk Level</label>\n                           <p>{this.props.bmiResult.bmi.risk}</p>\n                           <label>Prime</label>\n                           <p>{this.props.bmiResult.bmi.prime}</p>\n                        </div>\n                        <vr />\n                        <div className=\"bmi-result-part2\">\n                          <h4>Waist to Hip ratio(whr)</h4>\n                          <label>Value</label>\n                           <p>{this.props.bmiResult.whr.value}</p>\n                           <label>Status</label>\n                           <p>{this.props.bmiResult.whr.status}</p>\n                        </div>\n                        <vr />\n                        <div className=\"bmi-result-part3\">\n                          <h4>Waist to Height ratio(whtr)</h4>\n                          <label>Value</label>\n                           <p>{this.props.bmiResult.whtr.value}</p>\n                           <label>Status</label>\n                           <p>{this.props.bmiResult.whtr.status}</p>\n                        </div>\n                    </div>\n                    <div>\n                        <h3>Ideal Weight</h3>\n                        <h3>{this.props.bmiResult.ideal_weight}</h3>\n                    </div>\n                </div>\n            )\n        } else {\n            if(this.props.bmiLoaderFlag){\n              return (\n                <div className=\"loader-section\">\n                   <h3>Loading</h3><img className=\"loading\" src={loadingIcon} alt=\"loadingIcon\"/>\n                </div>\n              )\n            } else {\n                return (\n                    <div>\n                        <h3>Please fill the BMI form and hit Calculate to get your result</h3>\n                    </div>\n                )\n            }\n            \n        }\n    }\n    render() {\n        return (\n            <div className=\"health-check-section\">\n               <Link to=\"/home\" ><img className=\"home-icon\" src={homeIcon} alt=\"homeIcon\" /></Link> \n               <h3>Health Check</h3>\n               <div className=\"health-check-content\">\n                  <div className=\"bmi-form\">\n                       <h3>BMI Form</h3>\n                    <form>\n                       <div className=\"bmi-field-groups\">\n                           <div className=\"bmi-fields\">\n                              <label>Height(cm)</label>\n                              <input type=\"number\"\n                                     name=\"height\"\n                                     value={this.props.bmiObj.height.value}\n                                     onChange={this.updateBmiObj} />\n                           </div>\n                           <div className=\"bmi-fields\">\n                             <label>Weight(kg)</label>\n                             <input type=\"number\"\n                                    name=\"weight\"\n                                    value={this.props.bmiObj.weight.value}\n                                    onChange={this.updateBmiObj} />\n                           </div>\n                           <div className=\"bmi-fields\">\n                             <label>Gender</label>\n                               <select name=\"sex\" onChange={this.updateBmiObj} >\n                                 <option value=\"m\">Male</option>\n                                 <option value=\"f\">Female</option>\n                               </select>\n                           </div>\n                           <div className=\"bmi-fields\">\n                             <label>Age</label>\n                             <input type=\"number\"\n                                    name=\"age\"\n                                    value={this.props.bmiObj.age}\n                                    onChange={this.updateBmiObj} />\n                           </div>\n                           <div className=\"bmi-fields\">\n                             <label>Waist</label>\n                             <input type=\"number\"\n                                    name=\"waist\"\n                                    value={this.props.bmiObj.waist}\n                                    onChange={this.updateBmiObj} />\n                           </div>\n                           <div className=\"bmi-fields\">\n                             <label>Hip</label>\n                             <input type=\"number\"\n                                    name=\"hip\"\n                                    value={this.props.bmiObj.hip}\n                                    onChange={this.updateBmiObj}/>\n                           </div>\n                           <div className=\"bmi-fields submit\">\n                              <input type=\"submit\"\n                                     name=\"calculate\"\n                                     value=\"Calculate\"\n                                     onClick={this.submitBmi} />\n                           </div>\n                       </div>\n                   </form>  \n                  </div>\n                  <div className=\"bmi-result\">\n                     {this.displayBmiResult()}\n                  </div>\n               </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './recipe-details.css';\nimport loadingIcon from '../../images/loading-icon.gif';\nexport default class RecipeDetails extends Component {\n    constructor(props){\n        super(props);\n        this.props.getDescription(this.props.match.params.id);\n    }\n    displayDescription = () => {\n        if(this.props.recipeDescription){\n            return (\n                <div>\n                   <div>\n                       {this.props.recipeDescription.instructions}\n                   </div>\n                </div>\n            ) \n        } else{\n            return (\n                   <div>\n                      <h3>Loading</h3><img src={loadingIcon} />\n                  </div>\n            )\n                \n        }\n       \n    }\n    render() {\n        return (\n            <div>\n                {this.displayDescription()}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Switch,Route} from 'react-router-dom';\nimport Login from './components/login-component/login';\nimport SignUp from './components/sign-up-component/sign-up';\nimport Home from './components/home-component/home';\nimport MealPlan from './components/meal-plan-component/meal-plan';\nimport WorkoutPlan from './components/workout-plan-component/workout-plan';\nimport HealthCheck from './components/health-check-component/health-check';\nimport RecipeDetails from './components/recipe-details-component/recipe-details';\nimport Axios from 'axios';\nimport leafIcon from './images/leaf-icon.png';\nconst KEY = 'AIzaSyAEjrWBTS0fzNvmx9JTdBBNYEVs460G0SU';\nconst rapidKey = \"4f90ef96b0msh246f6e054afbdd1p14c2ffjsn4e4ab27d80f1\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready:false,\n      loginCredentials:[],\n      loggerInfo:{\n        \"userName\":\"\",\n        \"password\":\"\",\n        \"startWeight\": \"\",\n        \"currentWeight\": \"\",\n        \"goalWeight\": \"\",\n        \"date\":\"\",\n        \"mealPlan\":{},\n        \"workoutPlan\":{}\n    },\n    mealPlan:{},\n    searchText:\"\",\n    authenticatedFlag: false,\n    workoutVideos: [],\n    selectedWorkoutVideo: null,\n    styleSettings:{display:'none'},\n    bmiObj:{\n          \"weight\":{\"value\":\"\",\"unit\":\"kg\"},\n          \"height\":{\"value\":\"\",\"unit\":\"cm\"},\n          \"sex\":\"m\",\n          \"age\":\"\",\n          \"waist\":\"\",\n          \"hip\":\"\"\n    },\n    bmiResult:{},\n    bmiLoaderFlag:false,\n    recipeDescription:{}\n    }\n  }\n  componentDidMount(){\n    Axios.get(\"https://ironrest.herokuapp.com/pradeepa\")\n         .then((data) => {\n           console.log(data);\n           let credentials = data.data.filter(cred => cred._id === '5dd713560dce380017fe821d');\n           console.log(credentials)\n           console.log(credentials[0].loggers)\n           this.setState({\n               ready:true,\n               loginCredentials: credentials[0].loggers\n           })\n         })\n         .catch((err)=>{\n           console.log(err);\n         })\n\n      //meals call and workout call\n    if(this.state.loggerInfo.date === new Date().toDateString()){\n      if(!this.state.loggerInfo.mealPlan.meals){\n        console.log(\"if the dates are same and data is not there - make call\")\n         this.getMeals();\n         this.handleSubmit();\n      }\n    } else {\n      console.log(\"if the dates are different - make call\")\n      this.getMeals();\n      this.handleSubmit();\n    }\n     \n  }\n  getDescription = (id) => {\n    Axios.get(`https://webknox-recipes.p.rapidapi.com/recipes/${id}/information`,{headers:{\n      \"x-rapidapi-host\": \"webknox-recipes.p.rapidapi.com\",\n      \"x-rapidapi-key\": rapidKey}\n    })\n         .then((res)=>{\n           console.log(res);\n           this.setState({\n             recipeDescription:res.data\n           })\n         })\n         .catch((err)=>{\n           console.log(err);\n         })\n  }\n getMeals = () => {\n  Axios.get(\"https://webknox-recipes.p.rapidapi.com/recipes/mealplans/generate?targetCalories=2000&timeFrame=day\",{headers:{\n    \"x-rapidapi-host\": \"webknox-recipes.p.rapidapi.com\",\n    \"x-rapidapi-key\": rapidKey}\n  })\n  .then((meals)=>{\n    console.log(meals.data);\n    this.setState({\n        mealPlan:meals.data,\n        ready:true,\n    })\n  })\n  .catch((err)=>{\n    console.log(err);\n  })\n }\n  setBmiObject = (obj) => {\n     this.setState({\n       bmiObj:obj\n     })\n  }\n  getBmi = () => {\n    this.setState({\n      bmiLoaderFlag: true\n    })\n    Axios.post(\"https://bmi.p.rapidapi.com/\",this.state.bmiObj,{headers:{\n      \"x-rapidapi-host\": \"bmi.p.rapidapi.com\",\n\t    \"x-rapidapi-key\": rapidKey,\n\t    \"content-type\": \"application/json\",\n\t    \"accept\": \"application/json\"\n      }\n    })\n    .then((res)=>{\n      console.log(res);\n      this.setState({\n        bmiResult:res.data,\n        bmiObj:{\n          \"weight\":{\"value\":\"\",\"unit\":\"kg\"},\n          \"height\":{\"value\":\"\",\"unit\":\"cm\"},\n          \"sex\":\"m\",\n          \"age\":\"\",\n          \"waist\":\"\",\n          \"hip\":\"\"\n    },\n       bmiLoaderFlag:false\n      })\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n  setStyleSettings = (styleObj) => {\n    this.setState({\n      styleSettings: styleObj\n    });\n  }\n  handleSubmit = () => {\n    Axios.get('https://www.googleapis.com/youtube/v3/search',{params: {\n      part: \"snippet\",\n      maxResults: 3,\n      key: KEY,\n      q:\"workout\"\n  }\n  })\n       .then((res)=>{\n          console.log(res);\n          this.setState({\n        workoutVideos: res.data.items\n           })\n       })\n       .catch((err) => {\n         console.log(err);\n       })\n    \n}\nhandleVideoSelect = (video) => {\n  this.setState({selectedWorkoutVideo: video})\n}\n\n  setLogin = (login) => {\n    this.setState({\n      loggerInfo: login\n    })\n  }\n  authenticateUser = () => {\n    console.log('entering')\n    let logger = this.state.loginCredentials.filter(user => user.userName === this.state.loggerInfo.userName);\n    logger[0].date=new Date().toDateString();\n    logger[0].mealPlan=this.state.mealPlan;\n    logger[0].workoutPlan=this.state.workoutVideos;\n    let futureLoggersMeal = [...this.state.loginCredentials];\n    let index;\n    futureLoggersMeal.forEach((user,ind) => {\n      if(user.userName===this.state.loggerInfo.userName){\n        index = ind;\n      }\n    })\n    futureLoggersMeal[index]=logger[0];\n    Axios.put(\"https://ironrest.herokuapp.com/pradeepa/5dd713560dce380017fe821d\",{loggers:futureLoggersMeal})\n         .then(res=>{\n            console.log(\"updated with meal plan and date\")\n            })\n        .catch((err)=>console.log(err))\n    if(this.state.loggerInfo.password === logger[0].password) {\n       this.setState({\n         authenticatedFlag:true,\n         loggerInfo:logger\n       })\n    }\n  }\n  logOutSession = () => {\n    this.setState({\n      authenticatedFlag:false,\n      loggerInfo:{\n        userName:\"\",\n        password:\"\"\n    }\n    })\n  }\n  setSearch = (str) => {\n    this.setState({\n      searchText:str\n    })\n  }\n  callMeals = ()=> {\n    let str = this.state.searchText;\n    let replacedStr = str.replace(/ /gi,'%20');\n   \n  }\n  createAccount = () => {\n    console.log(this.state.loginCredentials);\n    let futureLoggers = [...this.state.loginCredentials];\n    futureLoggers.push(this.state.loggerInfo)\n    console.log(futureLoggers);\n     Axios.put(\"https://ironrest.herokuapp.com/pradeepa/5dd713560dce380017fe821d\",{loggers:futureLoggers})\n    .then(res=>{\n      console.log(res)\n      this.setState({\n        authenticatedFlag:true\n      })\n    })\n    .catch(err=>console.log(err))\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <header>\n           <img src={leafIcon} alt=\"leafIcon\" />\n          <h1>Aarokya</h1>\n        </header>\n        <div className=\"main-content\">\n          <Switch>\n            <Route exact path=\"/\" render = { (props) => <Login {...props} loggerInfo = {this.state.loggerInfo}\n                                                                          setLogin = {this.setLogin}\n                                                                          authenticateUser = {this.authenticateUser}\n                                                                          authenticatedFlag = {this.state.authenticatedFlag}\n            /> } />\n            <Route exact path=\"/sign-up\" render = { (props) => <SignUp {...props} loggerInfo = {this.state.loggerInfo}\n                                                                                  setLogin = {this.setLogin}\n                                                                                  createAccount = {this.createAccount}\n                                                                                  authenticateUser = {this.authenticateUser}\n                                                                                  authenticatedFlag = {this.state.authenticatedFlag}\n            /> } />\n            <Route exact path=\"/home\" render = { (props) => <Home {...props} styleSettings = {this.state.styleSettings}\n                                                                             setStyleSettings = {this.setStyleSettings}\n                                                                              logOutSession = {this.logOutSession}      \n                                                                              authenticatedFlag = {this.state.authenticatedFlag}       \n            /> }  />\n            <Route exact path=\"/meal-plan\" render = { (props) => <MealPlan {...props} searchText = {this.state.searchText}\n                                                                                      setSearch = {this.setSearch}\n                                                                                      callMeals = {this.callMeals}\n                                                                                      mealPlan = {this.state.mealPlan}\n                                                                                      ready = {this.state.ready}\n                                                                                      \n            /> } />\n            <Route exact path=\"/workout-plan\" render = { (props) => <WorkoutPlan {...props} workoutVideos = {this.state.workoutVideos}\n                                                                                            selectedWorkoutVideo = {this.state.selectedWorkoutVideo}\n                                                                                            handleVideoSelect = {this.handleVideoSelect}\n            /> } />\n            <Route exact path=\"/health-check\" render = { (props) => <HealthCheck {...props} bmiObj = {this.state.bmiObj}\n                                                                                            setBmiObject = {this.setBmiObject}\n                                                                                            getBmi = {this.getBmi}\n                                                                                            bmiResult = {this.state.bmiResult}\n                                                                                            bmiLoaderFlag = {this.state.bmiLoaderFlag}\n            /> } />\n             <Route exact path=\"/meal-plan/:id\" render = { (props) => <RecipeDetails {...props} mealPlan = {this.state.mealPlan}\n                                                                                                getDescription = {this.getDescription}\n                                                                                                recipeDescription = {this.state.recipeDescription}\n                                                                                            \n            /> } />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n       <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}